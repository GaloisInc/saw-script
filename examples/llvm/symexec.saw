main : TopLevel ();
main = do {
    m <- llvm_load_module "basic.bc";
    add <- define "add" {{ \x y -> (x : [32]) + y }};
    x <- fresh_bitvector "x" 32;
    y <- fresh_bitvector "y" 32;
    t <- llvm_symexec m "add" [("x", x), ("y", y)] ["return"];
    print_term t;
    t' <- abstract_symbolic t;
    prove_print abc {{ \a b -> t' a b == add a b }};
    print "Done.";
};
