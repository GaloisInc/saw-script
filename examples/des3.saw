main = do {
  (encr : ([64], [64]) -> [64]) <- read_sbv "des_enc.sbv";
  (decr : ([64], [64]) -> [64]) <- read_sbv "des_dec.sbv";
  enc <- define "enc" encr;
  dec <- define "dec" decr;

  print "proving dec_enc...";
  let thm1 key msg = dec (key, enc (key, msg)) == msg;
  dec_enc <- prove (seq (unfolding ["enc", "dec"]) abc) thm1;

  print "proving enc_dec...";
  let thm2 key msg = enc (key, dec (key, msg)) == msg;
  enc_dec <- prove (seq (unfolding ["enc", "dec"]) abc) thm2;

  let enc3 k1 k2 k3 msg = enc (k3, (dec (k2, enc (k1, msg))));
  let dec3 k1 k2 k3 msg = dec (k1, (enc (k2, dec (k3, msg))));

  print "proving dec3_enc3...";
  let thm3 k1 k2 k3 msg = dec3 k1 k2 k3 (enc3 k1 k2 k3 msg) == msg;
  result3 <- prove (
    seq print_goal (
    seq (simplify dec_enc) (
    seq print_goal (
    seq (simplify enc_dec) (
    seq print_goal (
    seq (simplify dec_enc) (
    seq print_goal (
    abc
    )))))))) thm3;
  print result3;

  print "proving enc3_dec3...";
  let thm4 k1 k2 k3 msg = enc3 k1 k2 k3 (dec3 k1 k2 k3 msg) == msg;
  result4 <- prove (
    seq print_goal (
    seq (simplify enc_dec) (
    seq print_goal (
    seq (simplify dec_enc) (
    seq print_goal (
    seq (simplify enc_dec) (
    seq print_goal (
    abc
    )))))))) thm4;
  print result4;
};
