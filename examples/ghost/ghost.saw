let next_spec counter : CrucibleSetup () = do {
  n <- llvm_fresh_var "n" (llvm_int 32);
  llvm_ghost_value counter n;
  llvm_execute_func [];
  llvm_ghost_value counter {{n+1}};
  llvm_return (llvm_term {{n}});
};

let example_spec counter : CrucibleSetup () = do {
  n <- llvm_fresh_var "nm" (llvm_int 32);
  llvm_precond {{n < 2}};
  llvm_ghost_value counter n;
  llvm_execute_func [];
  llvm_ghost_value counter {{n+3}};
  llvm_return (llvm_term {{n+2}});
};

let main : TopLevel () = do {
    counter <- declare_ghost_state "ctr";

    m <- llvm_load_module "simple.bc";
    next <- llvm_unsafe_assume_spec m "next" (next_spec counter);
    llvm_verify m "example" [next] false (example_spec counter)
                (do { print_goal; z3;} );
    print "done";
};
