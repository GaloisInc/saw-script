c <- java_load_class "Add";

let {{
  add : [32] -> [32] -> [32]
  add x y = x + y
}};

ms <-
  jvm_verify c "add" [] false
    do {
      this <- jvm_alloc_object "Add";
      x <- jvm_fresh_var "x" java_int;
      y <- jvm_fresh_var "y" java_int;
      jvm_execute_func [this, jvm_term x, jvm_term y];
      jvm_return (jvm_term {{ add x y }});
    }
    do {
      unfolding ["add"];
      z3;
    };

ms' <-
  jvm_verify c "dbl" [ms] false
    do {
      this <- jvm_alloc_object "Add";
      x <- jvm_fresh_var "x" java_int;
      jvm_execute_func [this, jvm_term x];
      jvm_return (jvm_term {{ add x x }});
    }
    z3;

print "Done.";
