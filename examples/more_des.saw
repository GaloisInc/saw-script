main = do {
  (enc : ([64], [64]) -> [64]) <- read_sbv "des_enc.sbv";
  (dec : ([64], [64]) -> [64]) <- read_sbv "des_dec.sbv";

  let thm key msg = dec (key, enc (key, msg)) == msg;
  result1 <- prove abc thm;
  print result1;

  let weak_key = (0x0101010101010101 : [64]);
  let thm2 msg = enc (weak_key, enc (weak_key, msg)) == msg;
  result2 <- prove abc thm2;
  print result2;

  let k1 = (0x011F011F010E010E : [64]);
  let k2 = (0x1F011F010E010E01 : [64]);
  let thm3 msg = enc (k1, enc (k2, msg)) == msg;
  result3 <- prove abc thm3;
  print result3;

  let thm4 key msg = complement (enc (key, msg)) == enc (complement key, complement msg);
  result4 <- prove abc thm4;
  print result4;
};
