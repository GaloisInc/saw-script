
module arrays where

import SpecM;

noErrorsHDesc : TpDesc;
noErrorsHDesc =
  Tp_Pi
    (Kind_Expr (Kind_bv 64))
    (Tp_Arr
       (Tp_Kind (Kind_Expr (Kind_bv 64)))
       (Tp_Arr
          (Tp_BVVec 64 (TpExpr_Var (Kind_bv 64) 0)
                    (Tp_Kind (Kind_Expr (Kind_bv 64))))
          (Tp_M (Tp_Pair
                   (Tp_BVVec 64 (TpExpr_Var (Kind_bv 64) 0)
                             (Tp_Kind (Kind_Expr (Kind_bv 64))))
                   (Tp_Kind (Kind_Expr (Kind_bv 64)))))));


-- The helper function for noErrorsContains0
--
-- noErrorsContains0H len i v =
--   orS existsS (noErrorsContains0H len (i+1) v)
noErrorsContains0H : (len i:Vec 64 Bool) -> BVVec 64 len (Vec 64 Bool) ->
                     SpecM VoidEv (BVVec 64 len (Vec 64 Bool) * Vec 64 Bool);
noErrorsContains0H len_top i_top v_top =
  (FixS VoidEv noErrorsHDesc
     (\ (rec : specFun VoidEv noErrorsHDesc) (len:Vec 64 Bool) (i:Vec 64 Bool)
        (v:BVVec 64 len (Vec 64 Bool)) ->
          invariantHint
            (SpecM VoidEv (BVVec 64 len (Vec 64 Bool) * Vec 64 Bool))
            (and (bvsle 64 0x0000000000000000 i)
                 (bvsle 64 i 0x0fffffffffffffff))
            (orS VoidEv (BVVec 64 len (Vec 64 Bool) * Vec 64 Bool)
                 (existsS VoidEv (BVVec 64 len (Vec 64 Bool) * Vec 64 Bool))
                 (rec len (bvAdd 64 i 0x0000000000000001) v))))
  len_top i_top v_top;

-- The specification that contains0 has no errors
noErrorsContains0 : (len:Vec 64 Bool) -> BVVec 64 len (Vec 64 Bool) ->
                    SpecM VoidEv (BVVec 64 len (Vec 64 Bool) * Vec 64 Bool);
noErrorsContains0 len v =
  noErrorsContains0H len 0x0000000000000000 v;
