
module Arrays where

import SpecPrims

zero_array_loop_spec : {n} Literal n [64] => [n][64] -> [n][64]
zero_array_loop_spec ys = loop 0 ys
  where loop : [64] -> [n][64] -> [n][64]
        loop i xs = invariantHint (i <= 0x0fffffffffffffff)
                                  (if i < `n then loop (i+1) (update xs i 0)
                                             else xs)

zero_array_spec : {n} Literal n [64] => [n][64] -> [n][64]
zero_array_spec xs = assuming (`n <= 0x0fffffffffffffff)
                              [ 0 | _ <- xs ]
