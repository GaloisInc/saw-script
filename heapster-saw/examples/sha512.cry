
module SHA512 where

import SpecPrims

// ============================================================================
// Definitions from cryptol-specs/Primitive/Keyless/Hash/SHA512.cry, with some
// type annotations added to SIGMA_0, SIGMA_1, sigma_0, and sigma_1 to get
// monadification to go through
// ============================================================================

type w = 64

type j = 80

K : [j][w]
K = [ 0x428a2f98d728ae22, 0x7137449123ef65cd, 0xb5c0fbcfec4d3b2f, 0xe9b5dba58189dbbc,
      0x3956c25bf348b538, 0x59f111f1b605d019, 0x923f82a4af194f9b, 0xab1c5ed5da6d8118,
      0xd807aa98a3030242, 0x12835b0145706fbe, 0x243185be4ee4b28c, 0x550c7dc3d5ffb4e2,
      0x72be5d74f27b896f, 0x80deb1fe3b1696b1, 0x9bdc06a725c71235, 0xc19bf174cf692694,
      0xe49b69c19ef14ad2, 0xefbe4786384f25e3, 0x0fc19dc68b8cd5b5, 0x240ca1cc77ac9c65,
      0x2de92c6f592b0275, 0x4a7484aa6ea6e483, 0x5cb0a9dcbd41fbd4, 0x76f988da831153b5,
      0x983e5152ee66dfab, 0xa831c66d2db43210, 0xb00327c898fb213f, 0xbf597fc7beef0ee4,
      0xc6e00bf33da88fc2, 0xd5a79147930aa725, 0x06ca6351e003826f, 0x142929670a0e6e70,
      0x27b70a8546d22ffc, 0x2e1b21385c26c926, 0x4d2c6dfc5ac42aed, 0x53380d139d95b3df,
      0x650a73548baf63de, 0x766a0abb3c77b2a8, 0x81c2c92e47edaee6, 0x92722c851482353b,
      0xa2bfe8a14cf10364, 0xa81a664bbc423001, 0xc24b8b70d0f89791, 0xc76c51a30654be30,
      0xd192e819d6ef5218, 0xd69906245565a910, 0xf40e35855771202a, 0x106aa07032bbd1b8,
      0x19a4c116b8d2d0c8, 0x1e376c085141ab53, 0x2748774cdf8eeb99, 0x34b0bcb5e19b48a8,
      0x391c0cb3c5c95a63, 0x4ed8aa4ae3418acb, 0x5b9cca4f7763e373, 0x682e6ff3d6b2b8a3,
      0x748f82ee5defb2fc, 0x78a5636f43172f60, 0x84c87814a1f0ab72, 0x8cc702081a6439ec,
      0x90befffa23631e28, 0xa4506cebde82bde9, 0xbef9a3f7b2c67915, 0xc67178f2e372532b,
      0xca273eceea26619c, 0xd186b8c721c0c207, 0xeada7dd6cde0eb1e, 0xf57d4f7fee6ed178,
      0x06f067aa72176fba, 0x0a637dc5a2c898a6, 0x113f9804bef90dae, 0x1b710b35131c471b,
      0x28db77f523047d84, 0x32caab7b40c72493, 0x3c9ebe0a15c9bebc, 0x431d67c49c100d4c,
      0x4cc5d4becb3e42b6, 0x597f299cfc657e2a, 0x5fcb6fab3ad6faec, 0x6c44198c4a475817]

SIGMA_0 : [w] -> [w]
SIGMA_0 x = (x >>> (28 : [w])) ^ (x >>> (34 : [w])) ^ (x >>> (39 : [w]))

SIGMA_1 : [w] -> [w]
SIGMA_1 x = (x >>> (14 : [w])) ^ (x >>> (18 : [w])) ^ (x >>> (41 : [w]))

sigma_0 : [w] -> [w]
sigma_0 x = (x >>> (1 : [w])) ^ (x >>> (8 : [w])) ^ (x >> (7 : [w]))

sigma_1 : [w] -> [w]
sigma_1 x = (x >>> (19 : [w])) ^ (x >>> (61 : [w])) ^ (x >> (6 : [w]))


// ============================================================================
// Definitions from cryptol-specs/Primitive/Keyless/Hash/SHA.cry
// ============================================================================

Ch : [w] -> [w] -> [w] -> [w]
Ch x y z = (x && y) ^ (~x && z)

Maj : [w] -> [w] -> [w] -> [w]
Maj x y z = (x && y) ^ (x && z) ^ (y && z)


// ============================================================================
// Cryptol functions which closely match the definitions in sha512.c
// ============================================================================

round_00_15_spec : [w] ->
                   [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] ->
                   [w] ->
                   ([w], [w], [w], [w], [w], [w], [w], [w], [w])
round_00_15_spec i a b c d e f g h T1 =
  (a, b, c, d', e, f, g, h', T1')
  where T1' = T1 + h + SIGMA_1 e + Ch e f g + K @ i
        d' = d + T1'
        h' = SIGMA_0 a + Maj a b c + T1'

round_16_80_spec : [w] -> [w] ->
                   [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] ->
                   [16][w] -> [w] ->
                   ([w], [w], [w], [w], [w], [w], [w], [w], [16][w], [w], [w], [w])
round_16_80_spec i j a b c d e f g h X T1 =
  (a', b', c', d', e', f', g', h', X', s0', s1', T1'')
  where s0' = sigma_0 (X @ ((j + 1) && 15))
        s1' = sigma_1 (X @ ((j + 14) && 15))
        T1' = (X @ (j && 15)) + s0' + s1' + (X @ ((j + 9) && 15))
        X' = update X (j && 15) T1'
        (a', b', c', d', e', f', g', h', T1'') =
          round_00_15_spec (i + j) a b c d e f g h T1'

processBlock_spec : [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] ->
                    [16][w] ->
                    ([w], [w], [w], [w], [w], [w], [w], [w], [16][w])
processBlock_spec a b c d e f g h in =
  processBlock_loop_spec 16 aF bF cF dF eF fF gF hF X T1 in
  where (a0,b0,c0,d0,e0,f0,g0,h0,_)  = round_00_15_spec  0 a  b  c  d  e  f  g  h  (in @ ( 0 : [w]))
        (h1,a1,b1,c1,d1,e1,f1,g1,_)  = round_00_15_spec  1 h0 a0 b0 c0 d0 e0 f0 g0 (in @ ( 1 : [w]))
        (g2,h2,a2,b2,c2,d2,e2,f2,_)  = round_00_15_spec  2 g1 h1 a1 b1 c1 d1 e1 f1 (in @ ( 2 : [w]))
        (f3,g3,h3,a3,b3,c3,d3,e3,_)  = round_00_15_spec  3 f2 g2 h2 a2 b2 c2 d2 e2 (in @ ( 3 : [w]))
        (e4,f4,g4,h4,a4,b4,c4,d4,_)  = round_00_15_spec  4 e3 f3 g3 h3 a3 b3 c3 d3 (in @ ( 4 : [w]))
        (d5,e5,f5,g5,h5,a5,b5,c5,_)  = round_00_15_spec  5 d4 e4 f4 g4 h4 a4 b4 c4 (in @ ( 5 : [w]))
        (c6,d6,e6,f6,g6,h6,a6,b6,_)  = round_00_15_spec  6 c5 d5 e5 f5 g5 h5 a5 b5 (in @ ( 6 : [w]))
        (b7,c7,d7,e7,f7,g7,h7,a7,_)  = round_00_15_spec  7 b6 c6 d6 e6 f6 g6 h6 a6 (in @ ( 7 : [w]))
        (a8,b8,c8,d8,e8,f8,g8,h8,_)  = round_00_15_spec  8 a7 b7 c7 d7 e7 f7 g7 h7 (in @ ( 8 : [w]))
        (h9,a9,b9,c9,d9,e9,f9,g9,_)  = round_00_15_spec  9 h8 a8 b8 c8 d8 e8 f8 g8 (in @ ( 9 : [w]))
        (gA,hA,aA,bA,cA,dA,eA,fA,_)  = round_00_15_spec 10 g9 h9 a9 b9 c9 d9 e9 f9 (in @ (10 : [w]))
        (fB,gB,hB,aB,bB,cB,dB,eB,_)  = round_00_15_spec 11 fA gA hA aA bA cA dA eA (in @ (11 : [w]))
        (eC,fC,gC,hC,aC,bC,cC,dC,_)  = round_00_15_spec 12 eB fB gB hB aB bB cB dB (in @ (12 : [w]))
        (dD,eD,fD,gD,hD,aD,bD,cD,_)  = round_00_15_spec 13 dC eC fC gC hC aC bC cC (in @ (13 : [w]))
        (cE,dE,eE,fE,gE,hE,aE,bE,_)  = round_00_15_spec 14 cD dD eD fD gD hD aD bD (in @ (14 : [w]))
        (bF,cF,dF,eF,fF,gF,hF,aF,T1) = round_00_15_spec 15 bE cE dE eE fE gE hE aE (in @ (15 : [w]))
        X = [in @ ( 0 : [w]), in @ ( 1 : [w]), in @ ( 2 : [w]), in @ ( 3 : [w]),
             in @ ( 4 : [w]), in @ ( 5 : [w]), in @ ( 6 : [w]), in @ ( 7 : [w]),
             in @ ( 8 : [w]), in @ ( 9 : [w]), in @ (10 : [w]), in @ (11 : [w]),
             in @ (12 : [w]), in @ (13 : [w]), in @ (14 : [w]), in @ (15 : [w])]

processBlock_loop_spec : [w] ->
                         [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] -> [w] ->
                         [16][w] -> [w] -> [16][w] ->
                         ([w], [w], [w], [w], [w], [w], [w], [w], [16][w])
processBlock_loop_spec i a b c d e f g h X T1 in =
  if i < 80 then processBlock_loop_spec (i+16) aF bF cF dF eF fF gF hF XF T1F in
            else (a,b,c,d,e,f,g,h,in)
  where (a0,b0,c0,d0,e0,f0,g0,h0,X0,_,_,T10) = round_16_80_spec i  0 a  b  c  d  e  f  g  h  X  T1 
        (h1,a1,b1,c1,d1,e1,f1,g1,X1,_,_,T11) = round_16_80_spec i  1 h0 a0 b0 c0 d0 e0 f0 g0 X0 T10
        (g2,h2,a2,b2,c2,d2,e2,f2,X2,_,_,T12) = round_16_80_spec i  2 g1 h1 a1 b1 c1 d1 e1 f1 X1 T11
        (f3,g3,h3,a3,b3,c3,d3,e3,X3,_,_,T13) = round_16_80_spec i  3 f2 g2 h2 a2 b2 c2 d2 e2 X2 T12
        (e4,f4,g4,h4,a4,b4,c4,d4,X4,_,_,T14) = round_16_80_spec i  4 e3 f3 g3 h3 a3 b3 c3 d3 X3 T13
        (d5,e5,f5,g5,h5,a5,b5,c5,X5,_,_,T15) = round_16_80_spec i  5 d4 e4 f4 g4 h4 a4 b4 c4 X4 T14
        (c6,d6,e6,f6,g6,h6,a6,b6,X6,_,_,T16) = round_16_80_spec i  6 c5 d5 e5 f5 g5 h5 a5 b5 X5 T15
        (b7,c7,d7,e7,f7,g7,h7,a7,X7,_,_,T17) = round_16_80_spec i  7 b6 c6 d6 e6 f6 g6 h6 a6 X6 T16
        (a8,b8,c8,d8,e8,f8,g8,h8,X8,_,_,T18) = round_16_80_spec i  8 a7 b7 c7 d7 e7 f7 g7 h7 X7 T17
        (h9,a9,b9,c9,d9,e9,f9,g9,X9,_,_,T19) = round_16_80_spec i  9 h8 a8 b8 c8 d8 e8 f8 g8 X8 T18
        (gA,hA,aA,bA,cA,dA,eA,fA,XA,_,_,T1A) = round_16_80_spec i 10 g9 h9 a9 b9 c9 d9 e9 f9 X9 T19
        (fB,gB,hB,aB,bB,cB,dB,eB,XB,_,_,T1B) = round_16_80_spec i 11 fA gA hA aA bA cA dA eA XA T1A
        (eC,fC,gC,hC,aC,bC,cC,dC,XC,_,_,T1C) = round_16_80_spec i 12 eB fB gB hB aB bB cB dB XB T1B
        (dD,eD,fD,gD,hD,aD,bD,cD,XD,_,_,T1D) = round_16_80_spec i 13 dC eC fC gC hC aC bC cC XC T1C
        (cE,dE,eE,fE,gE,hE,aE,bE,XE,_,_,T1E) = round_16_80_spec i 14 cD dD eD fD gD hD aD bD XD T1D
        (bF,cF,dF,eF,fF,gF,hF,aF,XF,_,_,T1F) = round_16_80_spec i 15 bE cE dE eE fE gE hE aE XE T1E

processBlocks_spec : {n} Literal n [64] => [8][w] -> [16*n][w] ->
                     ([8][w], [16*n][w])
processBlocks_spec state in = processBlocks_loop_spec 0 `n state in

processBlocks_loop_spec : {n} Literal n [64] => [w] -> [w] -> [8][w] ->
                          [16*n][w] -> ([8][w], [16*n][w])
processBlocks_loop_spec i j state in = invariantHint (i + j == `n) (
  if j != 0 then processBlocks_loop_spec (i+1) (j-1) state' in
            else (state, in))
  where (a,b,c,d,e,f,g,h) = (state @ ( 0 : [w]), state @ ( 1 : [w]),
                             state @ ( 2 : [w]), state @ ( 3 : [w]),
                             state @ ( 4 : [w]), state @ ( 5 : [w]),
                             state @ ( 6 : [w]), state @ ( 7 : [w]))
        in_i = split in @ i
        (a',b',c',d',e',f',g',h',_) = processBlock_spec a b c d e f g h in_i
        state' = [a', b', c', d', e', f', g', h']
