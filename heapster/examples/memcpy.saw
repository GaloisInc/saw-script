enable_experimental;
enable_deprecated;
env <- heapster_init_env_from_file "memcpy.sawcore" "memcpy.bc";

// Integer types
heapster_define_perm env "int64" " " "llvmptr 64" "exists x:bv 64.eq(llvmword(x))";

heapster_assume_fun env "llvm.memcpy.p0i8.p0i8.i64"
  "(rw:rwmodality, l1:lifetime, l2:lifetime, \
   \ b:llvmblock 64, len:bv 64). \
  \ arg0:[l1]memblock(W,0,len,emptysh), arg1:[l2]memblock(rw,0,len,eqsh(len,b)), \
  \ arg2:eq(llvmword(len)) -o \
  \ arg0:[l1]memblock(W,0,len,eqsh(len,b)), arg1:[l2]memblock(rw,0,len,eqsh(len,b))"
  "\\ (len:Vec 64 Bool) -> retS VoidEv #() ()";


heapster_typecheck_fun env "copy_int"
  "().arg0:int64<> -o ret:int64<>";

heapster_typecheck_fun env "copy_ptr_contents"
  "().arg0:ptr((R,0) |-> int64<>) -o ret:int64<>";

heapster_typecheck_fun env "copy_ptr"
  "().arg0:ptr((W,0) |-> int64<>) -o arg0:ptr((W,0) |-> int64<>)";

heapster_export_coq env "memcpy_gen.v";
