Cabal-version:      3.0
Name:               saw
Version:            1.3.0.99
Author:             Galois, Inc.
Maintainer:         saw@galois.com
Build-type:         Simple
License:            BSD-3-Clause
License-file:       LICENSE
Copyright:          Copyright 2012-2025 Galois, Inc.
Category:           Formal Methods
Synopsis:           The Software Analysis Workbench
Description:
  SAW is a tool supporting a broad range of formal verification
  scenarios.

-- extra files for saw-core
extra-source-files:
  saw-core/prelude/Prelude.sawcore
  saw-core/src/SAWCore/Parser/Grammar.y
  saw-core/src/SAWCore/Parser/Lexer.x

-- extra files for cryptol-saw-core
extra-source-files:
  cryptol-saw-core/saw/Cryptol.sawcore
  cryptol-saw-core/saw/SpecM.sawcore
  cryptol-saw-core/saw/CryptolM.sawcore

-- extra files for heapster
extra-source-files:
  heapster/src/Heapster/Lexer.x
  heapster/src/Heapster/Parser.y

-- extra files for saw-script
extra-source-files:
  saw-script/src/SAWScript/Parser.y
  saw-script/src/SAWScript/Lexer.x

-- declare GHC options once
common ghc-options
  ghc-options: -O2 -Wall -Werror -Wcompat -fno-ignore-asserts -fno-spec-constr-count
common ghc-options-executable
  ghc-options: -threaded -rtsopts


------------------------------------------------------------
-- saw-version

-- The saw-version library contains the SAW package's version
-- information. It's a separate library in the hopes of reducing the
-- rebuild impact when the git revision changes.
library saw-version
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    base >= 4.9

  hs-source-dirs: saw-version/src
  exposed-modules:
    SAWVersion.GitRev
    SAWVersion.Version
  other-modules:
    Paths_saw
  autogen-modules:
    Paths_saw


------------------------------------------------------------
-- saw-support

-- Support material shared by the rest of SAW.
library saw-support
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    -- upstream packages from hackage
    base >= 4.9,
    containers,
    panic,
    prettyprinter >= 1.7.0,
    prettyprinter-ansi-terminal >= 1.1.2,
    text,

    -- packages in git submodules
    -- (none)

    -- internal packages in the saw tree
    saw-version

  hs-source-dirs: saw-support/src
  exposed-modules:
    SAWSupport.PanicSupport
    SAWSupport.Pretty


------------------------------------------------------------
-- saw-core

-- The SAWCore intermediate language
library saw-core
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-tool-depends:
    alex:alex >= 3.1.3,
    happy:happy >= 1.9.6
  build-depends:
    -- upstream packages from hackage
    base >= 4.8,
    aeson >= 2.0 && < 2.3,
    array,
    bytestring,
    containers,
    data-inttrie,
    data-ref,
    directory,
    extra,
    filepath,
    hashable >= 1.3.4,
    indexed-traversable,
    lens >= 3.8,
    modern-uri >= 0.3.2 && < 0.4,
    MonadRandom,
    mtl,
    pretty,
    prettyprinter >= 1.7.0,
    random,
    template-haskell,
    text,
    th-lift-instances,
    tf-random,
    transformers,
    transformers-compat,
    unordered-containers,
    utf8-string,
    vector,

    -- packages in git submodules
    parameterized-utils,

    -- internal subpackages in the saw tree
    rme,
    saw:saw-support,

  hs-source-dirs: saw-core/src
  exposed-modules:
    SAWCore.SAWCore
    SAWCore.ExternalFormat
    SAWCore.Conversion
    SAWCore.Cache
    SAWCore.FiniteValue
    SAWCore.Module
    SAWCore.Name
    SAWCore.Parser.AST
    SAWCore.Parser.Grammar
    SAWCore.Parser.Lexer
    SAWCore.Parser.Position
    SAWCore.ParserUtils
    SAWCore.Prelude
    SAWCore.Prelude.Constants
    SAWCore.Prim
    SAWCore.Recognizer
    SAWCore.Rewriter
    SAWCore.SATQuery
    SAWCore.SCTypeCheck
    SAWCore.Simulator
    SAWCore.Simulator.Concrete
    SAWCore.Simulator.TermModel
    SAWCore.Simulator.MonadLazy
    SAWCore.Simulator.Prims
    SAWCore.Simulator.RME
    SAWCore.Simulator.Value
    SAWCore.SharedTerm
    SAWCore.Term.Functor
    SAWCore.Term.CtxTerm
    SAWCore.OpenTerm
    SAWCore.Term.Pretty
    SAWCore.TermNet
    SAWCore.Testing.Random
    SAWCore.Typechecker
    SAWCore.Unique
    SAWCore.Change
  other-modules:
    SAWCore.Panic

  if impl(ghc == 8.0.1)
    ghc-options: -Wno-redundant-constraints
  ghc-prof-options: -fprof-auto -fprof-cafs
  default-extensions:
    DeriveFunctor
    GeneralizedNewtypeDeriving
    ImplicitParams
    ViewPatterns


------------------------------------------------------------
-- cryptol-saw-core

-- The cryptol-saw-core library interfaces Cryptol to saw-core.
--
-- It translates Cryptol syntax into SAWCore terms, which can then be
-- analysed by various backend proof systems.

library cryptol-saw-core
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    -- upstream packages from hackage
    base,
    base-compat,
    array,
    bytestring,
    containers,
    data-inttrie >= 0.1.4,
    executable-path,
    filepath,
    integer-gmp,
    modern-uri,
    mtl,
    prettyprinter >= 1.7.0,
    sbv,
    template-haskell,
    text,
    unordered-containers,
    vector,

    -- packages in git submodules
    aig,
    cryptol >= 2.3.0,
    what4,

    -- internal sublibraries in the saw tree
    saw:saw-support,
    saw:saw-core

  hs-source-dirs: cryptol-saw-core/src
  exposed-modules:
    CryptolSAWCore.Cryptol
    CryptolSAWCore.CryptolEnv
    CryptolSAWCore.Monadify
    CryptolSAWCore.Prelude
    CryptolSAWCore.PreludeM
    CryptolSAWCore.Simpset
    CryptolSAWCore.TypedTerm
  other-modules:
    CryptolSAWCore.Panic


------------------------------------------------------------
-- saw-core-coq

-- The saw-core-coq library implements a backend for translating terms
-- in the SAWCore intermediate language into the syntax of Coq/Rocq.
library saw-core-coq
  import: ghc-options
  default-language: Haskell2010
  visibility: private

  build-depends:
    -- upstream packages from hackage
    base == 4.*,
    containers,
    interpolate,
    lens,
    mtl,
    prettyprinter,
    text,
    vector,
    zenc,

    -- galois packages from hackage
    bv-sized,

    -- packages in git submodules
    cryptol,
    parameterized-utils,

    -- internal sublibraries in the saw tree
    saw:saw-core,
    saw:cryptol-saw-core

  hs-source-dirs: saw-core-coq/src
  exposed-modules:
    Language.Coq.AST
    Language.Coq.Pretty
    SAWCoreCoq.Coq
    SAWCoreCoq.CryptolModule
    SAWCoreCoq.SAWModule
    SAWCoreCoq.Monad
    SAWCoreCoq.Term
    SAWCoreCoq.SpecialTreatment


------------------------------------------------------------
-- saw-core-aig

-- SAWCore backend for AIGs
--
-- A backend for symbolically evaluating terms in the SAWCore
-- intermediate language using the aig library to generate
-- And-Inverter Graphs (AIGs).

library saw-core-aig
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    -- upstream packages from hackage
    base == 4.*,
    containers,
    text,
    vector,

    -- packages in git submodules
    aig,

    -- internal sublibraries in the saw tree
    saw:saw-support,
    saw:saw-core

  hs-source-dirs: saw-core-aig/src
  exposed-modules:
    SAWCoreAIG.BitBlast
  other-modules:
    SAWCoreAIG.Panic

  if impl(ghc == 8.0.1)
    ghc-options: -Wno-redundant-constraints


------------------------------------------------------------
-- saw-core-sbv

-- SAWCore backend for SBV
--
-- A backend for symbolically evaluating terms in the SAWCore
-- intermediate language using the SBV library to generate SMT-Lib.
library saw-core-sbv
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    -- upstream packages from hackage
    base == 4.*,
    containers,
    lens,
    mtl,
    sbv >= 9.1 && < 10.11,
    text,
    transformers,
    vector,

    -- internal sublibraries in the saw tree
    saw:saw-support,
    saw:saw-core

  hs-source-dirs: saw-core-sbv/src
  exposed-modules:
    SAWCoreSBV.SBV
    SAWCoreSBV.SWord
  other-modules:
    SAWCoreSBV.Panic


------------------------------------------------------------
-- saw-core-what4

-- SAWCore backend for What4
--
-- A backend for symbolically evaluating terms in the SAWCore
-- intermediate language using the What4 library to generate SMT-Lib.
library saw-core-what4
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    -- upstream packages from hackage
    base >= 4.9,
    bv-sized >= 1.0.0,
    containers,
    indexed-traversable,
    lens,
    mtl,
    reflection,
    text,
    transformers,
    vector,

    -- packages in git submodules
    parameterized-utils >= 1.0.8 && < 2.2,
    what4,

    -- internal sublibaries in the saw tree
    saw:saw-support,
    saw:saw-core

  hs-source-dirs: saw-core-what4/src
  exposed-modules:
    SAWCoreWhat4.What4
    SAWCoreWhat4.FirstOrder
    SAWCoreWhat4.PosNat
    SAWCoreWhat4.ReturnTrip
  other-modules:
    SAWCoreWhat4.Panic


------------------------------------------------------------
-- heapster

-- Program verification in SAW using Heapster
--
-- A type system for binaries based on separation logic, along with a
-- translation from well-typed programs into pure monadic SAW core
-- programs
library heapster
  import: ghc-options
  default-language: Haskell2010
  visibility: private

  build-tool-depends:
    alex:alex,
    happy:happy
  build-depends:
    -- upstream packages from hackage
    base == 4.*,
    aeson >= 1.5 && < 2.3,
    array ^>= 0.5.3,
    bytestring,
    containers,
    extra,
    filepath,
    lens,
    mtl,
    pretty,
    prettyprinter >= 1.7.0,
    reflection,
    text,
    template-haskell,
    th-abstraction,
    transformers,
    vector,

    -- galois packages from hackage
    bv-sized,

    -- packages in git submodules
    -- (hobbits is for now actually a source-repository-package)
    crucible,
    crucible-llvm,
    hobbits ^>= 1.4,
    language-rust,
    llvm-pretty >= 0.8,
    parameterized-utils,
    what4,

    -- internal sublibraries in the saw tree
    saw:saw-support,
    saw:saw-core

  hs-source-dirs: heapster/src
  exposed-modules:
    Heapster.CruUtil
    Heapster.GenMonad
    Heapster.IDESupport
    Heapster.HintExtract
    Heapster.Implication
    Heapster.Lexer
    Heapster.LLVMGlobalConst
    Heapster.Located
    Heapster.NamedMb
    Heapster.JSONExport
    Heapster.ParsedCtx
    Heapster.Parser
    Heapster.Permissions
    Heapster.PermParser
    Heapster.NamePropagation
    Heapster.RustTypes
    Heapster.SAWTranslation
    Heapster.Token
    Heapster.TypeChecker
    Heapster.TypedCrucible
    Heapster.UntypedAST
    Heapster.Widening
  other-modules:
    Heapster.Panic
    Heapster.PatternMatchUtil


------------------------------------------------------------
-- saw-central

-- The saw-central library contains the upper-level guts of SAW,
-- meaning the verification primitives and logic shared between
-- the saw-script interpreter and the remote API interface.
library saw-central
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    -- upstream packages from hackage
    base >= 4.9,
    aeson >= 2.0 && < 2.3,
    binary,
    bimap,
    bytestring,
    cborg-json,
    containers,
    constraints >= 0.6,
    cryptohash-sha256 >= 0.11.102.1,
    deepseq,
    directory >= 1.2.4.0,
    exceptions,
    extra,
    filepath,
    indexed-traversable,
    lens,
    modern-uri >= 0.3.2 && < 0.4,
    mtl >= 2.1,
    old-locale,
    old-time,
    pretty,
    prettyprinter,
    process,
    reflection,
    sbv >= 9.1 && < 10.11,
    serialise,
    split,
    temporary,
    text,
    time,
    transformers,
    unordered-containers,
    utf8-string,
    vector,
    zenc,
    -- apparently no longer used:
    --   either
    --   executable-path
    --   fgl
    --   parsec
    --   QuickCheck
    --   template-haskell
    --   transformers-compat

    -- galois packages from hackage
    bv-sized >= 1.0 && < 1.1,

    -- packages in git submodules
    -- (hobbits is for now actually a source-repository-package)
    aig,
    crucible >= 0.4,
    crucible-jvm,
    crucible-llvm >= 0.2,
    crucible-mir,
    cryptol,
    elf-edit,
    galois-dwarf >= 0.2.2,
    hobbits >= 1.3.1,
    jvm-parser,
    language-sally,
    llvm-pretty >= 0.8,
    llvm-pretty-bc-parser >= 0.1.3.1,
    lmdb-simple,
    macaw-base,
    macaw-x86,
    macaw-symbolic,
    macaw-x86-symbolic,
    parameterized-utils,
    what4 >= 0.4,
    what4-transition-system,
    -- apparently no longer used:
    --   flexdis86

    -- internal subpackages/sublibraries in the saw tree
    rme,
    saw:saw-support,
    saw:saw-core,
    saw:saw-core-aig,
    saw:saw-core-coq,
    saw:saw-core-sbv,
    saw:saw-core-what4,
    saw:cryptol-saw-core,
    saw:heapster,
    saw:saw-version,

  hs-source-dirs: saw-central/src
  exposed-modules:
    SAWCentral.Options
    SAWCentral.Position
    SAWCentral.Utils
    SAWCentral.AST
    SAWCentral.ASTUtil
    SAWCentral.Trace
    SAWCentral.Exceptions
    SAWCentral.CongruenceClosure
    SAWCentral.JavaExpr
    SAWCentral.JavaPretty
    SAWCentral.ImportAIG
    SAWCentral.SBVParser
    SAWCentral.SBVModel

    SAWCentral.Yosys.Utils
    SAWCentral.Yosys.Theorem
    SAWCentral.Yosys.IR
    SAWCentral.Yosys.Cell
    SAWCentral.Yosys.Netgraph
    SAWCentral.Yosys.State
    SAWCentral.Yosys.TransitionSystem
    SAWCentral.Yosys

    SAWCentral.MRSolver.Monad
    SAWCentral.MRSolver.SMT
    SAWCentral.MRSolver.Solver
    SAWCentral.MRSolver.Evidence
    SAWCentral.MRSolver.Term

    SAWCentral.Prover.Rewrite
    SAWCentral.Prover.SolverStats
    SAWCentral.Prover.Util
    SAWCentral.Prover.SBV
    SAWCentral.Prover.MRSolver
    SAWCentral.Prover.RME
    SAWCentral.Prover.ABC
    SAWCentral.Prover.What4
    SAWCentral.Prover.Exporter
    SAWCentral.Prover.Versions

    SAWCentral.Crucible.Common
    SAWCentral.Crucible.Common.MethodSpec
    SAWCentral.Crucible.Common.Override
    SAWCentral.Crucible.Common.ResolveSetupValue
    SAWCentral.Crucible.Common.Setup.Builtins
    SAWCentral.Crucible.Common.Setup.Type
    SAWCentral.Crucible.Common.Setup.Value
    SAWCentral.Crucible.Common.Vacuity

    SAWCentral.Crucible.LLVM.Builtins
    SAWCentral.Crucible.LLVM.Boilerplate
    SAWCentral.Crucible.LLVM.CrucibleLLVM
    SAWCentral.Crucible.LLVM.FFI
    SAWCentral.Crucible.LLVM.Override
    SAWCentral.Crucible.LLVM.MethodSpecIR
    SAWCentral.Crucible.LLVM.ResolveSetupValue
    SAWCentral.Crucible.LLVM.Setup.Value
    SAWCentral.Crucible.LLVM.Skeleton
    SAWCentral.Crucible.LLVM.Skeleton.Builtins
    SAWCentral.Crucible.LLVM.X86

    SAWCentral.Crucible.JVM.Builtins
    SAWCentral.Crucible.JVM.BuiltinsJVM
    SAWCentral.Crucible.JVM.MethodSpecIR
    SAWCentral.Crucible.JVM.Override
    SAWCentral.Crucible.JVM.ResolveSetupValue
    SAWCentral.Crucible.JVM.Setup.Value

    SAWCentral.Crucible.MIR.Builtins
    SAWCentral.Crucible.MIR.MethodSpecIR
    SAWCentral.Crucible.MIR.Override
    SAWCentral.Crucible.MIR.ResolveSetupValue
    SAWCentral.Crucible.MIR.Setup.Value
    SAWCentral.Crucible.MIR.TypeShape

    SAWCentral.X86
    SAWCentral.X86Spec

    SAWCentral.Bisimulation
    SAWCentral.BisimulationTheorem

    SAWCentral.Builtins
    SAWCentral.LLVMBuiltins
    SAWCentral.Proof
    SAWCentral.SolverCache
    SAWCentral.SolverVersions
    SAWCentral.TopLevel
    SAWCentral.VerificationSummary

    SAWCentral.Value
  other-modules:
    SAWCentral.Panic

  if impl(ghc == 8.0.1)
    ghc-options: -Wno-redundant-constraints


------------------------------------------------------------
-- saw-script

-- The saw-script library.
--
-- The saw-script library contains the interpreter for the SAWScript
-- language.
library saw-script
  import: ghc-options
  default-language: Haskell2010
  visibility: private

  build-tool-depends:
    -- note: as of 20250521 alex < 3.2.6 fails dependency resolution,
    -- but 3.2.6 works, and so does the current latest (3.5.3)
    alex:alex >= 3.1.3,
    happy:happy >= 1.9.4
  build-depends:
    -- upstream packages from hackage
    base >= 4.9,
    ansi-terminal,
    array,
    bytestring,
    containers,
    directory >= 1.2.4.0,
    exceptions,
    extra,
    filepath,
    free,
    haskeline,
    IfElse,
    lens,
    mtl >= 2.1,
    pretty,
    prettyprinter,
    pretty-show,
    process,
    terminal-size,
    text,
    transformers,

    -- packages in git submodules
    -- (hobbits is for now actually a source-repository-package)
    aig,
    crucible >= 0.4,
    crucible-jvm,
    crucible-llvm >= 0.2,
    crucible-mir,
    cryptol,
    hobbits >= 1.3.1,
    jvm-parser,
    llvm-pretty >= 0.8,
    parameterized-utils,

    -- internal sublibraries in the saw tree
    saw:saw-version,
    saw:saw-support,
    saw:saw-core,
    saw:cryptol-saw-core,
    saw:saw-core-coq,
    saw:heapster,
    saw:saw-central,

  hs-source-dirs: saw-script/src
  exposed-modules:
    SAWScript.AutoMatch
    SAWScript.AutoMatch.Interaction
    SAWScript.AutoMatch.ArgMapping
    SAWScript.AutoMatch.Declaration
    SAWScript.AutoMatch.Cryptol
    SAWScript.AutoMatch.LLVM
    SAWScript.AutoMatch.JVM
    SAWScript.AutoMatch.Util
    SAWScript.Import
    SAWScript.Interpreter
    SAWScript.Lexer
    SAWScript.Parser
    SAWScript.Search
    SAWScript.Token
    SAWScript.Typechecker
    SAWScript.ValueOps

    SAWScript.HeapsterBuiltins

    SAWScript.REPL
    SAWScript.REPL.Command
    SAWScript.REPL.Haskeline
    SAWScript.REPL.Logo
    SAWScript.REPL.Monad
    SAWScript.REPL.Trie
  other-modules:
    SAWScript.Panic

  if impl(ghc == 8.0.1)
    ghc-options: -Wno-redundant-constraints


------------------------------------------------------------
-- saw-server

-- The remote API RPC server.
library saw-server
  import: ghc-options
  default-language: Haskell2010
  visibility: public

  build-depends:
    -- upstream packages from hackage
    base >=4.11.1.0 && <4.20,
    aeson >= 1.4.2 && < 2.3,
    base64-bytestring,
    bytestring,
    containers >= 0.6 && < 0.7,
    cryptonite,
    cryptonite-conduit,
    directory,
    lens,
    mtl,
    silently,
    text,
    unordered-containers,
    vector >= 0.12 && < 0.14,

    -- packages in git submodules
    aig,
    argo,
    cryptol >= 2.8.1,
    cryptol-remote-api,
    crucible,
    crucible-jvm,
    crucible-mir,
    jvm-parser,
    llvm-pretty,
    llvm-pretty-bc-parser,
    parameterized-utils,

    -- internal subpackages in the saw tree
    saw:saw-support,
    saw:saw-core,
    saw:cryptol-saw-core,
    saw:saw-central

  hs-source-dirs: saw-server/src
  exposed-modules:
    SAWServer.SAWServer,
    SAWServer.ClearState,
    SAWServer.CryptolExpression,
    SAWServer.CryptolSetup,
    SAWServer.Data.Contract,
    SAWServer.Data.JVMType,
    SAWServer.Data.LLVMType,
    SAWServer.Data.MIRType,
    SAWServer.Data.SetupValue,
    SAWServer.Eval,
    SAWServer.Exceptions,
    SAWServer.Ghost,
    SAWServer.JVMCrucibleSetup,
    SAWServer.JVMVerify,
    SAWServer.LLVMCrucibleSetup,
    SAWServer.LLVMVerify,
    SAWServer.MIRCrucibleSetup,
    SAWServer.MIRFindADT,
    SAWServer.MIRVerify,
    SAWServer.NoParams,
    SAWServer.OK,
    SAWServer.ProofScript,
    SAWServer.SaveTerm,
    SAWServer.SetOption,
    SAWServer.TopLevel,
    SAWServer.TrackFile,
    SAWServer.VerifyCommon,
    SAWServer.Yosys


------------------------------------------------------------
-- saw

-- The saw executable is where you run the saw-script interpreter.
executable saw
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base >= 4.5,
    directory,
    filepath,

    -- packages in git submodules
    aig,

    -- internal sublibraries in the saw tree
    saw:saw-version,
    saw:saw-central,
    saw:saw-script,

  hs-source-dirs: saw
  main-is: Main.hs
  other-modules:
    Paths_saw
  autogen-modules:
    Paths_saw


------------------------------------------------------------
-- saw-tools

-- The saw-remote-api executable is the server program for the remote
-- API interface.
executable saw-remote-api
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base >=4.11.1.0 && <4.20,
    aeson >= 1.4.2 && < 2.3,
    base64-bytestring,
    bytestring,
    containers >= 0.6 && < 0.7,
    cryptonite,
    cryptonite-conduit,
    directory,
    lens,
    mtl,
    silently,
    text,
    unordered-containers,
    vector >= 0.12 && < 0.14,

    -- packages in git submodules
    aig,
    argo,
    cryptol >= 2.8.1,
    cryptol-remote-api,
    crucible,
    crucible-jvm,
    crucible-mir,
    jvm-parser,
    llvm-pretty,
    llvm-pretty-bc-parser,
    parameterized-utils,

    -- internal subpackages in the saw tree
    saw:saw-core,
    saw:cryptol-saw-core,
    saw:saw-central,
    saw:saw-server

  hs-source-dirs: saw-remote-api
  main-is: Main.hs


------------------------------------------------------------
-- saw-tools

-- The Cryptol Symbolic Simulator (css) is a standalone program that
-- translates a single Cryptol function to an AIG.
executable css
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base >= 4.5,
    array,
    bytestring,
    containers,
    text,

    -- packages in git submodules
    aig,
    cryptol,

    -- internal sublibraries in the saw tree
    saw:saw-version,
    saw:saw-core,
    saw:saw-core-aig,
    saw:cryptol-saw-core

  hs-source-dirs: saw-tools/css
  main-is: Main.hs

  ghc-options: -pgmlc++
  extra-libraries:      stdc++

-- Verification Summary Viewer
--
-- Translate JSON verification summaries into GraphViz format to
-- produce a graph-based view of a verification effort.
executable verif-viewer
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base >= 4.5,
    aeson,
    attoparsec,
    attoparsec-aeson,
    bytestring,
    containers,
    graphviz,
    text,
    time

  hs-source-dirs: saw-tools/verif-viewer
  main-is: Main.hs

  if impl(ghc == 8.0.1)
    ghc-options: -Wno-redundant-constraints
  ghc-prof-options: -fprof-auto -fprof-cafs

-- extcore-info is a tool for examining the saw-core external dump format.
executable extcore-info
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base >= 4,

    -- the saw-core library in the saw tree
    saw:saw-core

  hs-source-dirs: saw-tools/extcore-info
  main-is: Main.hs


------------------------------------------------------------
-- test suites

-- If you add or rename a test suite there are (at least) three other
-- places to update:
--    build.sh (controls what gets built by default)
--    .github/workflows/ci.yml (controls what runs during CI)
--    doc/developer/developer.md (tells people they exist)

-- The integration-tests/intTests test suite is the main SAW test
-- suite.
test-suite integration-tests
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-tool-depends: saw:saw
  build-depends:
    -- upstream packages from hackage
    base,
    directory,
    filemanip,
    filepath,
    process,
    tasty,
    tasty-hunit,
    tasty-expected-failure,

  type: exitcode-stdio-1.0
  hs-source-dirs: intTests
  main-is: IntegrationTest.hs


-- There's a saw-core test suite.
test-suite saw-core-tests
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base >= 4,
    containers,
    data-ref,
    hashable,
    lens,
    mtl,
    QuickCheck >= 2.7,
    tagged,
    tasty,
    tasty-ant-xml >= 1.1.0,
    tasty-hunit,
    tasty-quickcheck,
    time,
    unordered-containers,
    vector,

    -- internal sublibraries in the saw tree
    saw:saw-support,
    saw:saw-core,

  type: exitcode-stdio-1.0
  hs-source-dirs: otherTests/saw-core
  main-is: Tests.hs
  other-modules:
    Tests.CacheTests
    Tests.Functor
    Tests.Parser
    Tests.Rewriter
    Tests.SharedTerm
    Tests.Simulator


-- The cryptol-saw-core library has its own small test suite.
test-suite cryptol-saw-core-tests
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base,
    bytestring,
    containers,
    heredoc >= 0.2,
    text,

    -- packages in git submodules
    cryptol,

    -- internal sublibraries in the saw tree
    saw:saw-core,
    saw:cryptol-saw-core

  type: exitcode-stdio-1.0
  hs-source-dirs: otherTests/cryptol-saw-core
  main-is: CryptolVerifierTC.hs


-- saw-core-coq has its own small test suite.
test-suite saw-core-coq-tests
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base,
    containers,
    mtl,
    prettyprinter,
    text,

    -- internal sublibraries in the saw tree
    saw:saw-core,
    saw:saw-core-coq,

  type: exitcode-stdio-1.0
  hs-source-dirs: otherTests/saw-core-coq
  main-is: Test.hs


-- heapster has a test suite.
test-suite heapster-prover-tests
  import: ghc-options
  import: ghc-options-executable
  default-language: Haskell2010

  build-depends:
    -- upstream packages from hackage
    base,
    directory,
    filemanip,
    filepath,
    process,
    tasty,
    tasty-hunit,
    tasty-expected-failure,

    -- packages in git submodules
    -- (hobbits is for now actually a source-repository-package)
    crucible,
    crucible-llvm,
    hobbits ^>= 1.4,

    -- the heapster library in the saw tree
    saw:heapster

  type: exitcode-stdio-1.0
  hs-source-dirs: heapster/proverTests
  main-is: Main.hs
