This repo holds code for the Java Symbolic Simulator, LLVM Symbolic
Simulator, SAWScript, and various shared infrastructure code.

Cryptol/   : Cryptol Verifier code
Java/      : Java Verifier code
LLVM/      : LLVM Verifier code

SAWCore/   : The implementation of the SAWCore intermediate language, used
             by LSS, JSS, and SAWScript

SAWScript/ : The SAWScript interpreter

Examples/  : Example verification scripts

To build SAWScript, LSS, and JSS together:

  * Ensure you have the programs `alex`, `happy`, and `c2hs`. All of
    them can be installed with `cabal install`. If you do that, make
    sure $HOME/.cabal/bin is in your PATH.

  * Ensure that you have the C libraries and header files for
    `terminfo`, which generally comes as part of `ncurses` on most
    platforms.

  * Ensure that you have the programs `javac` and `cvc4` on your
    PATH. CVC4 binaries are available here:
    http://cvc4.cs.nyu.edu/downloads/

  * Go into the SAWScript directory

  * Run the following command:

      ./build-sandbox.sh -p

    where the -p flag tells it to pull the latest updates from any
    dependency repositories. You can leave it out, and speed up the
    build slightly, if you know that they haven't changed.

  * Alternatively, you can run

      ./build-sandbox.sh -p REPODIR=<path to dependency repositories>

    if you plan to fetch dependency repositories from somewhere else
    than `src.galois.com`

  * Optionally, run ./stage.sh to create a binary tarball

Once the build is complete, the SAWScript tutorial will give you an
introduction to using the SAWScript interpreter.

    SAWScript/doc/tutorial/sawScriptTutorial.pdf

[]
