let get_spec (x : Ghost) : CrucibleSetup () = do {
  i <- crucible_fresh_var "i" (llvm_int 32);
  crucible_ghost_value x i;
  crucible_execute_func [];
  crucible_ghost_value x i;
  crucible_return (crucible_term i);
};

let f_spec (x : Ghost) : CrucibleSetup () = do {
  i <- crucible_fresh_var "i" (llvm_int 32);
  crucible_execute_func [crucible_term i];
  crucible_ghost_value x i;
};

let g_spec (x : Ghost) : CrucibleSetup () = do {
  i <- crucible_fresh_var "i" (llvm_int 32);
  crucible_execute_func [crucible_term i];
  crucible_ghost_value x {{ True : Bit }}; // should be [32]
};

let h_spec : CrucibleSetup () = do {
  i <- crucible_fresh_var "i" (llvm_int 32);
  crucible_precond {{i < 512}};
  crucible_execute_func [crucible_term i];
  ret <- crucible_fresh_var "ret" (llvm_int 32);
  crucible_return (crucible_term ret);
  crucible_postcond {{ ret == i }};
};

let main : TopLevel () = do {
  x <- crucible_declare_ghost_state "x";
  m <- llvm_load_module "test.bc";
  get_ov <- crucible_llvm_unsafe_assume_spec m "get" (get_spec x);
  f_ov <- crucible_llvm_unsafe_assume_spec m "f" (f_spec x);
  g_ov <- crucible_llvm_unsafe_assume_spec m "g" (g_spec x);
  fails (crucible_llvm_verify m "h" [get_ov, f_ov, g_ov] false h_spec z3);
  print "done";
};
