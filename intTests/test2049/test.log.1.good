 Loading file "test.saw"
 Assume override assign
 Verifying zero...
 Simulating zero...
 Registering overrides for `assign`
   variant `Symbol "assign"`
 Matching 1 overrides of assign...
 Branching on 1 override variants of assign...
 Applied override! assign
 Checking proof obligations zero...
 Subgoal failed: zero test.saw:60:1: error: in ghost_value
Literal equality postcondition
Expected term: 
let { x@1 = Prelude.Vec 8 Prelude.Bool
    }
 in fresh:zero::table#1583
Actual term:
let { x@1 = Prelude.Vec 8 Prelude.Bool
    }
 in Cryptol.ecArrayUpdate x@1 x@1 fresh:zero::table#1583
      fresh:zero::k#1584
      (Prelude.bvNat 8 0)

 SolverStats {solverStatsSolvers = fromList ["W4 ->z3"], solverStatsGoalSize = N}
 ----------Counterexample----------
   zero::table: [1 := 1, <default> := 0]
   zero::k: 1
 ----------------------------------
 Stack trace:
"llvm_verify" (test.saw:60:1-60:12)
Proof failed.

FAILED
