m <- llvm_load_module "./test.bc";

let init_global name = do {
  llvm_points_to (llvm_global name)
                 (llvm_global_initializer name);
};

f_spec <- llvm_verify m "f" [] true (do {
    y <- llvm_fresh_var "y" (llvm_int 32);
    init_global "X";
    llvm_execute_func [llvm_term y];
    llvm_return (llvm_term {{ 1 + y : [32] }});
}) abc;

g_spec <- llvm_verify m "g" [] true (do {
    z <- llvm_fresh_var "z" (llvm_int 32);
    init_global "X";
    llvm_execute_func [llvm_term z];
    llvm_return (llvm_term {{ 2 + z : [32] }});
}) abc;

// Note that the f and g overrides are not actually used for
// rewriting, because their preconditions aren't met.
llvm_verify m "h" [f_spec, g_spec] true (do {
    w <- llvm_fresh_var "w" (llvm_int 32);
    init_global "X";
    llvm_execute_func [llvm_term w];
    llvm_return (llvm_term {{ 4 + w : [32] }});
}) abc;