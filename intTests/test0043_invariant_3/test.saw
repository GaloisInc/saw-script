m <- llvm_load_module "test.bc";

let ptr_to_fresh n ty = do {
  p <- crucible_alloc ty;
  x <- crucible_fresh_var n ty;
  crucible_points_to p (crucible_term x);
  return (p, x);
};

let count_n_spec = do {
  n <- crucible_fresh_var "n" (llvm_int 64);
  crucible_execute_func [crucible_term n];
  crucible_return (crucible_term n);
};

let inv_spec = do {
  (pn, n) <- ptr_to_fresh "n" (llvm_int 64);
  (pc, c) <- ptr_to_fresh "c" (llvm_int 64);
  (pi, i) <- ptr_to_fresh "i" (llvm_int 64);
  crucible_precond {{ 0 <= i /\ i <= n }};
  crucible_execute_func [pn, pc, pi];
  crucible_return (crucible_term {{ c + (n - i) }});
};

inv <- crucible_llvm_unsafe_assume_spec m "__breakpoint__inv#count_n" inv_spec;
crucible_llvm_verify m "__breakpoint__inv#count_n" [inv] false inv_spec abc;
crucible_llvm_verify m "count_n" [inv] false count_n_spec abc;

