m <- llvm_load_module "test.bc";

let f_spec = do {
  x <- llvm_fresh_var "x" (llvm_int 32);
  llvm_execute_func [(crucible_term {{ x - 1 }}), (crucible_term x), (crucible_term {{ x + 1 }})];
  crucible_return (crucible_term {{ 3 * x }});
};

let f_false_spec = do {
  x <- llvm_fresh_var "x" (llvm_int 32);
  llvm_execute_func [(crucible_term {{ x - 1 }}), (crucible_term {{ x + 0 }}), (crucible_term {{ x + 1 }})];
  crucible_return (crucible_term {{ 3 * x }});
};

let test_spec = do {
  llvm_execute_func [];
};

f_ov <- llvm_unsafe_assume_spec m "f" f_spec;
f_false_ov <- llvm_unsafe_assume_spec m "f" f_false_spec;
llvm_verify m "test_f" [f_ov] false test_spec trivial;
fails (llvm_verify m "test_f" [f_false_ov] false test_spec trivial);

