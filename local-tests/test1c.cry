module Test1c where

// test1c.cry (refer to what's in EnumProto.sawcore)

enum ETT a b = C1
             | C2 a
             | C3 Bool b

f1 : {c, d} ETT c d -> [8]
f1 e1 = case e1 of
          C1 -> 101
          _  -> 102

f1' e1 = case e1 of
           C1 -> 101
           _  -> 102

f2 : ETT Bool () -> [8]
f2 e = case e of
         C1     -> 101
         C3 _ _ -> 103
         C2 _   -> 102

f3 : ETT Bool () -> [8]
f3 e = case e of
         C1      -> 101
         _       -> 105
  // creates two default alts, with different

t11 = f1 C1
t12 = f1 (C2 ())
t13 = f1 (C3 True False)

t31 = f3 C1
t32 = f3 (C2 False)
t33 = f3 (C3 True ())

/*
return (type {{ f1  }})
return (type {{ f1' }})

return (normalize_term {{ t11 }})
return (normalize_term {{ t12 }})
return (normalize_term {{ t13 }})

return (eval_int {{ t31 }})
return (eval_int {{ t32 }})
return (eval_int {{ t33 }})
*/
